<snippet>
	<content><![CDATA[
//-----------------------------------------
// LScript Procedural Texture template
//

@version 2.2
@warnings
@script shader

// global values go here

currentTime,currentFrame;

create
{
	// one-time initialization takes place here
}

destroy
{
	// take care of final clean-up activities here
}

newtime: frame, time
{
	// called each time the current time index changes in the scene

	currentFrame = frame;
	currentTime = time;
}

init
{
	// called at the beginning of each render pass
}

cleanup
{
	// called at the end of each render pass
}

flags
{
	// let's Layout know which attributes of the surface you will alter
	// possible flag values are:
	// NORMAL       COLOR     LUMINOUS
	// DIFFUSE      SPECULAR  MIRROR
	// TRANSPARENT  ETA       ROUGHNESS
	// RAYTRACE

	return(...);
}

process: sa
{
	// called for each visible spot on the surface
}

load: what,io
{
	if(what == SCENEMODE)   // processing an ASCII scene file
	{
	}
}

save: what,io
{
	if(what == SCENEMODE)
	{
	}
}

options
{
	reqbegin("<Requester Title>");

	c0 = ctlinteger("Integer Control",1);
	c1 = ctlnumber("Number Control",1.0);
	c2 = ctlstring("String Control","my string");
	c3 = ctlcheckbox("Checkbox Control",true);
	c4 = ctlpopup("Popup control",1,@"Item 1","Item 2","Item 3"@);
	c5 = ctlchoice("Choice Control",1,@"X","Y","Z"@);

	return if !reqpost();

	// get requester control values here

	reqend();
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger></tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.lscript</scope>
	<!-- description, syns i auto completion listan in view -->
	<description>Procedural Texture</description>
</snippet>