<snippet>
	<content><![CDATA[
//-----------------------------------------
// LScript Master Class template
//

@version 2.2
@warnings
@script master

// global values go here

create
{
	// one-time initialization takes place here
}

destroy
{
	// take care of final clean-up activities here
}

flags
{
	// indicates the type of the Master script.  it can
	// be either SCENE or LAYOUT.  SCENE scripts will be
	// removed whenever the current scene is cleared or
	// replaced.  LAYOUT scripts persist until manually
	// removed.

	return(SCENE);
}

process: event, command
{
	// called for each event that occurs within the filter
	// you specified in flags()
}

load: what,io
{
	if(what == SCENEMODE)   // processing an ASCII scene file
	{
	}
}

save: what,io
{
	if(what == SCENEMODE)
	{
	}
}

options
{
	reqbegin("<Requester Title>");

	c0 = ctlinteger("Integer Control",1);
	c1 = ctlnumber("Number Control",1.0);
	c2 = ctlstring("String Control","my string");
	c3 = ctlcheckbox("Checkbox Control",true);
	c4 = ctlpopup("Popup control",1,@"Item 1","Item 2","Item 3"@);
	c5 = ctlchoice("Choice Control",1,@"X","Y","Z"@);

	return if !reqpost();

	// get requester control values here

	reqend();
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger></tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.lscript</scope>
	<!-- description, syns i auto completion listan in view -->
	<description>Master</description>
</snippet>