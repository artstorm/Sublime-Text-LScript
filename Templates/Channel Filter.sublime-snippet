<snippet>
	<content><![CDATA[
//-----------------------------------------
// LScript Channel Filter template
//

@version 2.2
@warnings
@script channel

// global values go here

create
{
	// one-time initialization takes place here
}

destroy
{
	// take care of final clean-up activities here
}

process: ca, frame, time
{
	// 'ca' is the Channel Filter Object Agent

	// it exports one read-only data member:
	//       name      the name of the channel as
	//                 it is displayed to the user

	// it provides two methods:
	//       get       returns the value of the
	//                 channel (as a floating-point
	//                 number) for an indicated time
	//                 index
	//       set       sets the channel's value to
	//                 the provided floating-point
	//                 value for the current time
	//                 index (indicated by the 'time'
	//                 argument to process()).

}

load: what,io
{
	if(what == SCENEMODE)   // processing an ASCII scene file
	{
	}
}

save: what,io
{
	if(what == SCENEMODE)
	{
	}
}

options
{
	reqbegin("<Requester Title>");

	c0 = ctlinteger("Integer Control",1);
	c1 = ctlnumber("Number Control",1.0);
	c2 = ctlstring("String Control","my string");
	c3 = ctlcheckbox("Checkbox Control",true);
	c4 = ctlpopup("Popup control",1,@"Item 1","Item 2","Item 3"@);
	c5 = ctlchoice("Choice Control",1,@"X","Y","Z"@);

	return if !reqpost();

	// get requester control values here

	reqend();
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger></tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.lscript</scope>
	<!-- description, syns i auto completion listan in view -->
	<description>Template: Channel Filter</description>
</snippet>